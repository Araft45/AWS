
  BastionHost:
    Type: AWS::EC2::Instance
    DependsOn: BastionHostSecurityGroup
    Properties:
      ImageId: ami-0b0dcb5067f052a63
      KeyName: !Ref KeyPair
      InstanceType: t2.micro
      NetworkInterfaces:
        - DeviceIndex: 0
          AssociatePublicIpAddress: true
          SubnetId: !GetAtt PublicSubnet3.SubnetId
          GroupSet:
            - !GetAtt BastionHostSecurityGroup.GroupId
      Tags: 
        - Key: Name
          Value: !Sub ${EnvironmentName}-BastionHost
      UserData: 
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            yum update -y
            yum install -y nmap
            yum install -y mysql
  
  WebTierLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    DependsOn: WebTierSecurityGroup
    Properties:
      LaunchTemplateName: !Sub ${EnvironmentName}-WebTier-LaunchTemplate
      LaunchTemplateData:
        ImageId: ami-0b0dcb5067f052a63
        InstanceType: t2.micro
        KeyName: !Ref KeyPair
        NetworkInterfaces:
          - DeviceIndex: 0
            AssociatePublicIpAddress: true
            Groups:
              - !Ref WebTierSecurityGroup
        UserData: 
          Fn::Base64: 
            !Sub |
              #!/bin/bash
              yum update -y
              yum install -y httpd
              yum install -y nmap
              systemctl start httpd
              systemctl enable httpd
              EC2AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
              echo '<center><h1>This Amazon EC2 instance is located in Availability Zone: AZID </h1></center>' > /var/www/html/index.txt
              sed "s/AZID/$EC2AZ/" /var/www/html/index.txt > /var/www/html/index.html

  WebTierApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    DependsOn: InternetGatewayAttachment
    Properties:
      Name: !Sub ${EnvironmentName}-WebTier-LoadBalancer
      Type: application
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups: 
        - !GetAtt WebTierLBSecurityGroup.GroupId
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2

  WebTierTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      Name: !Sub ${EnvironmentName}-WebTier-TargetGroup
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      Port: 80
      Protocol: HTTP
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      TargetType: instance
      Matcher: 
        HttpCode: "200"
      VpcId: !Ref VPC
  
  WebTierHTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn: WebTierTargetGroup
    Properties:
      LoadBalancerArn: !Ref WebTierApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebTierTargetGroup
      
  WebTierAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: WebTierLaunchTemplate
    Properties:
      AutoScalingGroupName: !Sub ${EnvironmentName}-WebTier-AutoScaleGroup
      DesiredCapacity: 2
      MinSize: 2
      MaxSize: 3
      LaunchTemplate: 
        LaunchTemplateId: !Ref WebTierLaunchTemplate
        Version: !GetAtt WebTierLaunchTemplate.LatestVersionNumber
      TargetGroupARNs: 
        - !Ref WebTierTargetGroup
      VPCZoneIdentifier:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2

  AppTierLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    DependsOn: AppTierSecurityGroup
    Properties:
      LaunchTemplateName: !Sub ${EnvironmentName}-AppTier-LaunchTemplate
      LaunchTemplateData:
        ImageId: ami-0b0dcb5067f052a63
        InstanceType: t2.micro
        KeyName: !Ref KeyPair
        NetworkInterfaces:
          - DeviceIndex: 0
            AssociatePublicIpAddress: false
            Groups:
              - !Ref AppTierSecurityGroup
        UserData: 
          Fn::Base64: 
            !Sub |
              #!/bin/bash
              yum update -y
              yum install -y httpd
              yum install -y nmap
              yum install -y mysql
              systemctl start httpd
              systemctl enable httpd
              echo '<center><h1>This is the Application tier! </h1></center>' > /var/www/html/index.html

  AppTierApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    DependsOn: AppTierLBSecurityGroup
    Properties:
      Name: !Sub ${EnvironmentName}-AppTier-LoadBalancer
      Type: application
      IpAddressType: ipv4
      Scheme: internal
      SecurityGroups: 
        - !GetAtt AppTierLBSecurityGroup.GroupId
      Subnets:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2

  AppTierTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      Name: !Sub ${EnvironmentName}-AppTier-TargetGroup
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      Port: 80
      Protocol: HTTP
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      TargetType: instance
      Matcher: 
        HttpCode: "200"
      VpcId: !Ref VPC
  
  AppTierHTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn: AppTierTargetGroup
    Properties:
      LoadBalancerArn: !Ref AppTierApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AppTierTargetGroup

  AppTierAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: AppTierLaunchTemplate
    Properties:
      AutoScalingGroupName: !Sub ${EnvironmentName}-AppTier-AutoScaleGroup
      DesiredCapacity: 2
      MinSize: 2
      MaxSize: 3
      LaunchTemplate: 
        LaunchTemplateId: !Ref AppTierLaunchTemplate
        Version: !GetAtt AppTierLaunchTemplate.LatestVersionNumber
      TargetGroupARNs: 
        - !Ref AppTierTargetGroup
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2

  MySQLDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: "Subnets for MySQL RDS Instances"
      DBSubnetGroupName: !Ref MySQLDBSubnetGroupName
      SubnetIds: 
        - !GetAtt PrivateSubnet3.SubnetId
        - !GetAtt PrivateSubnet4.SubnetId
  
  MySQLDatabase:
    Type: AWS::RDS::DBInstance
    DependsOn: MySQLDBSubnetGroup
    Properties:
      Engine: mysql
      EngineVersion: 8.0.30
      DBInstanceIdentifier: !Ref DatabaseName
      DBSecurityGroups: 
        - !Ref DatabaseSecurityGroup
      DBSubnetGroupName: !Ref MySQLDBSubnetGroup
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      DBInstanceClass: db.t2.small
      MultiAZ: true
      AllocatedStorage: 20

Outputs:
  BastionHostPIP:
    Description: The Public IP Address of the Bastion Host
    Value: !GetAtt BastionHost.PublicIp  
  WebTierLoadBalancerURL:
    Description: The URL of the Web Tier Application Load Balancer
    Value: !GetAtt WebTierApplicationLoadBalancer.DNSName
  AppTierLoadBalancerURL:
    Description: The URL of the App Tier Application Load Balancer
    Value: !GetAtt AppTierApplicationLoadBalancer.DNSName
  MySQLDatabaseEndpointAddress:
    Description: The FQDN of the MySQL Database
    Value: !GetAtt MySQLDatabase.Endpoint.Address
  MySQLDatabasePort:
    Description: The TCP port of the MySQL Database
    Value: !GetAtt MySQLDatabase.Endpoint.Port
 