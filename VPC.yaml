AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC with Public and Private Subnets, NAT Gateway, and Network ACLs in Mumbai (ap-south-1)'

Resources:
  # VPC
  VPCIac:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  # Public Subnets (ap-south-1a)
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCIac
      AvailabilityZone: ap-south-1a
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1
        - Key: Description
          Value: Public subnet in ap-south-1a

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCIac
      AvailabilityZone: ap-south-1a
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2
        - Key: Description
          Value: Public subnet in ap-south-1a

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCIac
      AvailabilityZone: ap-south-1a
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet3
        - Key: Description
          Value: Public subnet in ap-south-1a

  # Private Subnets (ap-south-1b and ap-south-1c)
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCIac
      AvailabilityZone: ap-south-1b
      CidrBlock: 10.0.4.0/24
      Tags:
        - Key: Name
          Value: PrivateSubnet1
        - Key: Description
          Value: Private subnet in ap-south-1b

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCIac
      AvailabilityZone: ap-south-1c
      CidrBlock: 10.0.5.0/24
      Tags:
        - Key: Name
          Value: PrivateSubnet2
        - Key: Description
          Value: Private subnet in ap-south-1c

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCIac
      AvailabilityZone: ap-south-1c
      CidrBlock: 10.0.6.0/24
      Tags:
        - Key: Name
          Value: PrivateSubnet3
        - Key: Description
          Value: Private subnet in ap-south-1c

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyInternetGateway

  # Attach Gateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPCIac
      InternetGatewayId: !Ref InternetGateway

  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCIac
      Tags:
        - Key: Name
          Value: PublicRouteTable

  # Public Route
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

    NatGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1 # Choose any of your public subnets

  # Private Route Tables (one for each private subnet)
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCIac
      Tags:
        - Key: Name
          Value: PrivateRouteTable1

  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCIac
      Tags:
        - Key: Name
          Value: PrivateRouteTable2

  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  # Network ACLs
  # Public NACL (allow all inbound and outbound traffic)
  PublicNacl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPCIac
      Tags:
        - Key: Name
          Value: PublicNacl

  # Inbound rules for Public NACL (adjust based on your needs)
  InboundRulesPublicNacl:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNacl
      RuleNumber: 100
      Protocol: -1 # Allow all protocols
      PortRange:
        From: 0
        To: 65535
      Egress: false
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  # Outbound rules for Public NACL (adjust based on your needs)
  OutboundRulesPublicNacl:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNacl
      RuleNumber: 200
      Protocol: -1 # Allow all protocols
      PortRange:
        From: 0
        To: 65535
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  # Private NACL (allow outbound traffic to the internet only)
  PrivateNacl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPCIac
      Tags:
        - Key: Name
          Value: PrivateNacl

  # Inbound rules for Private NACL (deny all inbound traffic by default)
  InboundRulesPrivateNacl:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateNacl
      RuleNumber: 100
      Protocol: -1 # Deny all protocols
      PortRange:
        From: 0
        To: 65535
      Egress: false
      RuleAction: deny
      CidrBlock: 0.0.0.0/0

  # Outbound rules for Private NACL (allow outbound traffic to the internet)
  OutboundRulesPrivateNacl:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateNacl
      RuleNumber: 200
      Protocol: -1 # Allow all protocols
      PortRange:
        From: 0
        To: 65535
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  # Subnet NACL Associations
  PublicSubnetNaclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      NetworkAclId: !Ref PublicNacl

   PublicSubnetNaclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      NetworkAclId: !Ref PublicNacl

  PublicSubnetNaclAssociation3:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet3
      NetworkAclId: !Ref PublicNacl

  PrivateSubnetNaclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      NetworkAclId: !Ref PrivateNacl

  PrivateSubnetNaclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      NetworkAclId: !Ref PrivateNacl

  PrivateSubnetNaclAssociation3:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet3
      NetworkAclId: !Ref PrivateNacl

